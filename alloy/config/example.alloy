logging {
	level  = "debug"
	format = "logfmt"
}

discovery.kubernetes "pods" {
	role = "pod"
}

discovery.kubernetes "nodes" {
	role = "node"
}

discovery.kubernetes "services" {
	role = "service"
}

discovery.kubernetes "endpoints" {
	role = "endpoints"
}

discovery.kubernetes "endpointslices" {
	role = "endpointslice"
}

discovery.kubernetes "ingresses" {
	role = "ingress"
}


discovery.relabel "pods" {
	targets = discovery.kubernetes.pods.targets

	rule {
		source_labels = ["__meta_kubernetes_pod_controller_name"]
		regex         = "([0-9a-z-.]+?)(-[0-9a-f]{8,10})?"
		target_label  = "__tmp_controller_name"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_name", "__meta_kubernetes_pod_label_app", "__tmp_controller_name", "__meta_kubernetes_pod_name"]
		regex         = "^;*([^;]+)(;.*)?$"
		target_label  = "app"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_instance", "__meta_kubernetes_pod_label_instance"]
		regex         = "^;*([^;]+)(;.*)?$"
		target_label  = "instance"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_label_app_kubernetes_io_component", "__meta_kubernetes_pod_label_component"]
		regex         = "^;*([^;]+)(;.*)?$"
		target_label  = "component"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_node_name"]
		target_label  = "node_name"
	}

	rule {
		source_labels = ["__meta_kubernetes_namespace"]
		target_label  = "namespace"
	}

	rule {
		source_labels = ["namespace", "app"]
		separator     = "/"
		target_label  = "job"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_name"]
		target_label  = "pod"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_container_name"]
		target_label  = "container"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_uid", "__meta_kubernetes_pod_container_name"]
		separator     = "/"
		target_label  = "__path__"
		replacement   = "/var/log/pods/*$1/*.log"
	}

	rule {
		source_labels = ["__meta_kubernetes_pod_annotationpresent_kubernetes_io_config_hash", "__meta_kubernetes_pod_annotation_kubernetes_io_config_hash", "__meta_kubernetes_pod_container_name"]
		separator     = "/"
		regex         = "true/(.*)"
		target_label  = "__path__"
		replacement   = "/var/log/pods/*$1/*.log"
	}
}

discovery.relabel "nodes" {
	targets = discovery.kubernetes.nodes.targets

	rule {
		source_labels = ["__meta_kubernetes_node_label_kubernetes_io_hostname"]
		target_label  = "node"
	}
}

local.file_match "pods" {
	path_targets = discovery.relabel.pods.output
}

loki.source.file "pods" {
	targets               = local.file_match.pods.targets
	forward_to            = [loki.process.pods.receiver]
	legacy_positions_file = "/run/promtail/positions.yaml"
}

loki.process "pods" {
	forward_to = [loki.write.default.receiver]
}

loki.write "default" {
	external_labels = {
		cluster = "deus-ex-machina-mgmt-prod",
	}
	endpoint {
		url = "http://loki-gateway.logging.svc.cluster.local/loki/api/v1/push"
		headers = {
			"X-Scope-OrgID" = "1",
		}
	}
}